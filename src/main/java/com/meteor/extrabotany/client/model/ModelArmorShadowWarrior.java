package com.meteor.extrabotany.client.model;

import javax.annotation.Nonnull;

import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.inventory.EntityEquipmentSlot;
import vazkii.botania.client.model.armor.ModelArmor;

public class ModelArmorShadowWarrior extends ModelArmor{
	
	private final ModelRenderer helmAnchor;  
	private final ModelRenderer bodyAnchor;
	private final ModelRenderer body;	
	private final ModelRenderer armLAnchor;
    private final ModelRenderer armRAnchor;
	private final ModelRenderer pantsAnchor;
    private final ModelRenderer legL;
    private final ModelRenderer legR; 
    private final ModelRenderer bootL;
    private final ModelRenderer bootR;

    ModelRenderer rightarm;
    ModelRenderer leftarm;
    ModelRenderer rightleg;
    ModelRenderer leftleg;
    ModelRenderer top;
    ModelRenderer back;
    ModelRenderer front1;
    ModelRenderer front2;
    ModelRenderer right2;
    ModelRenderer front;
    ModelRenderer right1;
    ModelRenderer medal;
    ModelRenderer right3;
    ModelRenderer left2;
    ModelRenderer left3;
    ModelRenderer left1;
    ModelRenderer a1;
    ModelRenderer a2;
    ModelRenderer a3;
    ModelRenderer b1;
    ModelRenderer b2;
    ModelRenderer b3;
    ModelRenderer c1;
    ModelRenderer c2;
    ModelRenderer c3;
    ModelRenderer d1;
    ModelRenderer d2;
    ModelRenderer d3;
    ModelRenderer e1;
    ModelRenderer e2;
    ModelRenderer e3;
    ModelRenderer f1;
    ModelRenderer f2;
    ModelRenderer f3;
    ModelRenderer fronter;
    ModelRenderer larm1;
    ModelRenderer book;
    ModelRenderer backer;
    ModelRenderer larm4;
    ModelRenderer larm3;
    ModelRenderer larm2;
    ModelRenderer rarm1;
    ModelRenderer rarm2;
    ModelRenderer rarm3;
    ModelRenderer rarm4;
    ModelRenderer boot1;
    ModelRenderer boot2;
    ModelRenderer fb1;
    ModelRenderer fb2;
	
	public ModelArmorShadowWarrior(EntityEquipmentSlot slot) {
		super(slot);

		this.textureWidth = 128;
        this.textureHeight = 128;
		float s = 0.01F;
		
		//helm
        this.helmAnchor = new ModelRenderer(this, 0, 0);
        this.helmAnchor.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.helmAnchor.addBox(-1.0F, -2.0F, 0.0F, 2, 2, 2, s);
        
        //body
        this.bodyAnchor = new ModelRenderer(this, 0, 0);
        this.bodyAnchor.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.bodyAnchor.addBox(-1.0F, 0.0F, -1.0F, 2, 2, 2, s);
        this.body = new ModelRenderer(this, 16, 16);
        this.body.addBox(-4F, 0F, -2F, 8, 12, 4);
        this.body.setRotationPoint(0F, 0F, 0F);
        this.body.setTextureSize(64, 32);
        this.body.mirror = true;
        this.setRotateAngle(body, 0F, 0F, 0F);
                
     	//armL
        this.armLAnchor = new ModelRenderer(this, 0, 0);
        this.armLAnchor.mirror = true;
        this.armLAnchor.setRotationPoint(4.0F, 2.0F, 0.0F);
        this.armLAnchor.addBox(0.0F, -1.0F, -1.0F, 2, 2, 2, s);
        
        //armR
        this.armRAnchor = new ModelRenderer(this, 0, 0);
        this.armRAnchor.mirror = true;
        this.armRAnchor.setRotationPoint(-4.0F, 2.0F, 0.0F);
        this.armRAnchor.addBox(-2.0F, -1.0F, -1.0F, 2, 2, 2, s);
        
        //pants
        this.pantsAnchor = new ModelRenderer(this, 0, 0);
        this.pantsAnchor.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.pantsAnchor.addBox(-1.0F, 0.0F, -1.0F, 2, 2, 2, s);           
        this.legR = new ModelRenderer(this, 0, 16);
        this.legR.addBox(-2F, 0F, -2F, 4, 12, 4, s);
        this.legR.setRotationPoint(-2F, 12F, 0F);
        this.legR.setTextureSize(64, 32);
        this.legR.mirror = true;
        this.setRotateAngle(legR, 0F, 0F, 0F);
        this.legL = new ModelRenderer(this, 0, 16);
        this.legL.addBox(-2F, 0F, -2F, 4, 12, 4, s);
        this.legL.setRotationPoint(2F, 12F, 0F);
        this.legL.setTextureSize(64, 32);
        this.legL.mirror = true;
        this.setRotateAngle(legL, 0F, 0F, 0F);
        
        //boots
        this.bootL = new ModelRenderer(this, 0, 0);
        this.bootL.mirror = true;
        this.bootL.setRotationPoint(1.9F, 12.0F, 0.0F);
        this.bootL.addBox(-2.39F, 8.5F, -2.49F, 2,2,2, s);
        this.bootR = new ModelRenderer(this, 0, 0);
        this.bootR.setRotationPoint(-2.0F, 12.0F, 0.0F);
        this.bootR.addBox(-2.5F, 8.5F, -2.51F, 2,2,2, s);
        
        rightarm = new ModelRenderer(this, 40, 16);
        rightarm.addBox(-3F, -2F, -2F, 4, 12, 4);
        rightarm.setRotationPoint(-5F, 2F, 0F);
        rightarm.setTextureSize(64, 32);
        rightarm.mirror = true;
        this.setRotateAngle(rightarm, 0F, 0F, 0F);
        leftarm = new ModelRenderer(this, 40, 16);
        leftarm.addBox(-1F, -2F, -2F, 4, 12, 4);
        leftarm.setRotationPoint(5F, 2F, 0F);
        leftarm.setTextureSize(64, 32);
        leftarm.mirror = true;
        this.setRotateAngle(leftarm, 0F, 0F, 0F);
        rightleg = new ModelRenderer(this, 0, 16);
        rightleg.addBox(-2F, 0F, -2F, 4, 12, 4);
        rightleg.setRotationPoint(-2F, 12F, 0F);
        rightleg.setTextureSize(64, 32);
        rightleg.mirror = true;
        this.setRotateAngle(rightleg, 0F, 0F, 0F);
        leftleg = new ModelRenderer(this, 0, 16);
        leftleg.addBox(-2F, 0F, -2F, 4, 12, 4);
        leftleg.setRotationPoint(2F, 12F, 0F);
        leftleg.setTextureSize(64, 32);
        leftleg.mirror = true;
        this.setRotateAngle(leftleg, 0F, 0F, 0F);
        top = new ModelRenderer(this, 0, 33);
        top.addBox(0F, 0F, 0F, 9, 3, 9, s);
        top.setRotationPoint(-4.5F, -8.5F, -4.5F);
        top.setTextureSize(64, 32);
        top.mirror = true;
        this.setRotateAngle(top, 0F, 0F, 0F);
        back = new ModelRenderer(this, 37, 33);
        back.addBox(0F, 0F, 0F, 9, 7, 1);
        back.setRotationPoint(-4.5F, -8F, 3F);
        back.setTextureSize(64, 32);
        back.mirror = true;
        this.setRotateAngle(back, 0.2617994F, 0F, 0F);
        front1 = new ModelRenderer(this, 58, 33);
        front1.addBox(0F, 0F, 0F, 3, 5, 1);
        front1.setRotationPoint(-5.7F, -6F, -1.9F);
        front1.setTextureSize(64, 32);
        front1.mirror = true;
        this.setRotateAngle(front1, 0F, 0.9948377F, 0F);
        front2 = new ModelRenderer(this, 67, 33);
        front2.addBox(0F, 0F, 0F, 3, 5, 1);
        front2.setRotationPoint(3.7F, -6F, -4.5F);
        front2.setTextureSize(64, 32);
        front2.mirror = true;
        this.setRotateAngle(front2, 0F, -0.9948377F, 0F);
        right2 = new ModelRenderer(this, 76, 33);
        right2.addBox(0F, 0F, 0F, 1, 6, 9, s);
        right2.setRotationPoint(-4F, -8F, -4.5F);
        right2.setTextureSize(64, 32);
        right2.mirror = true;
        this.setRotateAngle(right2, 0F, 0F, 0.3316126F);
        front = new ModelRenderer(this, 97, 33);
        front.addBox(0F, 0F, 0F, 6, 2, 1, s);
        front.setRotationPoint(-3F, -8F, -5.1F);
        front.setTextureSize(64, 32);
        front.mirror = true;
        this.setRotateAngle(front, 0F, 0F, 0F);
        right1 = new ModelRenderer(this, 0, 50);
        right1.addBox(0F, 0F, 0F, 2, 6, 1, s);
        right1.setRotationPoint(-5F, -13F, -4.9F);
        right1.setTextureSize(64, 32);
        right1.mirror = true;
        this.setRotateAngle(right1, 0.0872665F, 0.0872665F, -0.2617994F);
        medal = new ModelRenderer(this, 7, 50);
        medal.addBox(0F, 0F, 0F, 2, 4, 1, s);
        medal.setRotationPoint(-1F, -11.5F, -5F);
        medal.setTextureSize(64, 32);
        medal.mirror = true;
        this.setRotateAngle(medal, 0F, 0F, 0F);
        right3 = new ModelRenderer(this, 14, 50);
        right3.addBox(0F, 0F, 0F, 3, 4, 1);
        right3.setRotationPoint(-7F, -7.2F, -4.3F);
        right3.setTextureSize(64, 32);
        right3.mirror = true;
        this.setRotateAngle(right3, 0F, 0F, 0.3316126F);
        left2 = new ModelRenderer(this, 23, 50);
        left2.addBox(0F, 0F, 0F, 1, 6, 9);
        left2.setRotationPoint(3F, -8F, -4.5F);
        left2.setTextureSize(64, 32);
        left2.mirror = true;
        this.setRotateAngle(left2, 0F, 0F, -0.3316126F);
        left3 = new ModelRenderer(this, 44, 50);
        left3.addBox(0F, 0F, 0F, 3, 4, 1);
        left3.setRotationPoint(3.7F, -6.5F, -4.3F);
        left3.setTextureSize(64, 32);
        left3.mirror = true;
        this.setRotateAngle(left3, 0F, 0F, -0.3316126F);
        left1 = new ModelRenderer(this, 53, 50);
        left1.addBox(0F, 0F, 0F, 2, 6, 1);
        left1.setRotationPoint(3F, -13.5F, -5F);
        left1.setTextureSize(64, 32);
        left1.mirror = true;
        this.setRotateAngle(left1, 0.0872665F, -0.0872665F, 0.2617994F);
        a1 = new ModelRenderer(this, 0, 67);
        a1.addBox(0F, 0F, 0F, 5, 5, 1);
        a1.setRotationPoint(-2.5F, 10F, -3F);
        a1.setTextureSize(64, 32);
        a1.mirror = true;
        this.setRotateAngle(a1, -0.2792527F, 0F, 0F);
        a2 = new ModelRenderer(this, 0, 67);
        a2.addBox(0F, 0F, 0F, 5, 5, 1);
        a2.setRotationPoint(-2.5F, 12F, -3F);
        a2.setTextureSize(64, 32);
        a2.mirror = true;
        this.setRotateAngle(a2, -0.2792527F, 0F, 0F);
        a3 = new ModelRenderer(this, 0, 67);
        a3.addBox(0F, 0F, 0F, 5, 5, 1);
        a3.setRotationPoint(-2.5F, 14F, -3F);
        a3.setTextureSize(64, 32);
        a3.mirror = true;
        this.setRotateAngle(a3, -0.2792527F, 0F, 0F);
        b1 = new ModelRenderer(this, 13, 67);
        b1.addBox(0F, 0F, 0F, 3, 3, 1);
        b1.setRotationPoint(-3.5F, -2F, -3F);
        b1.setTextureSize(64, 32);
        b1.mirror = true;
        this.setRotateAngle(b1, -0.2617994F, 0F, 0F);
        b2 = new ModelRenderer(this, 13, 67);
        b2.addBox(0F, 0F, 0F, 3, 3, 1);
        b2.setRotationPoint(-3.5F, 0F, -3F);
        b2.setTextureSize(64, 32);
        b2.mirror = true;
        this.setRotateAngle(b2, -0.2617994F, 0F, 0F);
        b3 = new ModelRenderer(this, 13, 67);
        b3.addBox(0F, 0F, 0F, 3, 3, 1);
        b3.setRotationPoint(-3.5F, 2F, -3F);
        b3.setTextureSize(64, 32);
        b3.mirror = true;
        this.setRotateAngle(b3, -0.2617994F, 0F, 0F);
        c1 = new ModelRenderer(this, 22, 67);
        c1.addBox(0F, 0F, 0F, 3, 3, 1);
        c1.setRotationPoint(0.5F, -2F, -3F);
        c1.setTextureSize(64, 32);
        c1.mirror = true;
        this.setRotateAngle(c1, -0.2617994F, 0F, 0F);
        c2 = new ModelRenderer(this, 22, 67);
        c2.addBox(0F, 0F, 0F, 3, 3, 1);
        c2.setRotationPoint(0.5F, 0F, -3F);
        c2.setTextureSize(64, 32);
        c2.mirror = true;
        this.setRotateAngle(c2, -0.2617994F, 0F, 0F);
        c3 = new ModelRenderer(this, 22, 67);
        c3.addBox(0F, 0F, 0F, 3, 3, 1);
        c3.setRotationPoint(0.5F, 2F, -3F);
        c3.setTextureSize(64, 32);
        c3.mirror = true;
        this.setRotateAngle(c3, -0.2617994F, 0F, 0F);
        d1 = new ModelRenderer(this, 0, 74);
        d1.addBox(0F, 0F, 0F, 1, 5, 4);
        d1.setRotationPoint(3F, 10F, -2F);
        d1.setTextureSize(64, 32);
        d1.mirror = true;
        this.setRotateAngle(d1, 0F, 0F, -0.2617994F);
        d2 = new ModelRenderer(this, 0, 74);
        d2.addBox(0F, 0F, 0F, 1, 5, 4);
        d2.setRotationPoint(3F, 12F, -2F);
        d2.setTextureSize(64, 32);
        d2.mirror = true;
        this.setRotateAngle(d2, 0F, 0F, -0.2617994F);
        d3 = new ModelRenderer(this, 0, 74);
        d3.addBox(0F, 0F, 0F, 1, 5, 4);
        d3.setRotationPoint(3F, 14F, -2F);
        d3.setTextureSize(64, 32);
        d3.mirror = true;
        this.setRotateAngle(d3, 0F, 0F, -0.2617994F);
        e1 = new ModelRenderer(this, 0, 74);
        e1.addBox(0F, 0F, 0F, 1, 5, 4);
        e1.setRotationPoint(-4.2F, 9.8F, -2F);
        e1.setTextureSize(64, 32);
        e1.mirror = true;
        this.setRotateAngle(e1, 0F, 0F, 0.2617994F);
        e2 = new ModelRenderer(this, 0, 74);
        e2.addBox(0F, 0F, 0F, 1, 5, 4);
        e2.setRotationPoint(-4.2F, 11.8F, -2F);
        e2.setTextureSize(64, 32);
        e2.mirror = true;
        this.setRotateAngle(e2, 0F, 0F, 0.2617994F);
        e3 = new ModelRenderer(this, 0, 74);
        e3.addBox(0F, 0F, 0F, 1, 5, 4);
        e3.setRotationPoint(-4.2F, 13.8F, -2F);
        e3.setTextureSize(64, 32);
        e3.mirror = true;
        this.setRotateAngle(e3, 0F, 0F, 0.2617994F);
        f1 = new ModelRenderer(this, 11, 74);
        f1.addBox(0F, 0F, 0F, 9, 5, 1);
        f1.setRotationPoint(-4.5F, 10F, 1.8F);
        f1.setTextureSize(64, 32);
        f1.mirror = true;
        this.setRotateAngle(f1, 0.2617994F, 0F, 0F);
        f2 = new ModelRenderer(this, 11, 74);
        f2.addBox(0F, 0F, 0F, 9, 5, 1);
        f2.setRotationPoint(-4.5F, 12F, 1.8F);
        f2.setTextureSize(64, 32);
        f2.mirror = true;
        this.setRotateAngle(f2, 0.2617994F, 0F, 0F);
        f3 = new ModelRenderer(this, 11, 74);
        f3.addBox(0F, 0F, 0F, 9, 5, 1);
        f3.setRotationPoint(-4.5F, 14F, 1.8F);
        f3.setTextureSize(64, 32);
        f3.mirror = true;
        this.setRotateAngle(f3, 0.2617994F, 0F, 0F);
        fronter = new ModelRenderer(this, 0, 84);
        fronter.addBox(0F, 0F, 0F, 6, 7, 1, s);
        fronter.setRotationPoint(-3F, 1F, -3F);
        fronter.setTextureSize(64, 32);
        fronter.mirror = true;
        this.setRotateAngle(fronter, 0F, 0F, 0F);
        larm1 = new ModelRenderer(this, 15, 84);
        larm1.addBox(0F, 0F, 0F, 5, 2, 5, s);
        larm1.setRotationPoint(-2F, -3F, -2.5F);
        larm1.setTextureSize(64, 32);
        larm1.mirror = true;
        this.setRotateAngle(larm1, 0F, 0F, -0.1745329F);
        book = new ModelRenderer(this, 0, 93);
        book.addBox(0F, 0F, 0F, 4, 6, 2, s);
        book.setRotationPoint(1F, 1.2F, 2.7F);
        book.setTextureSize(64, 32);
        book.mirror = true;
        this.setRotateAngle(book, 0F, 0F, 0.7853982F);
        backer = new ModelRenderer(this, 0, 102);
        backer.addBox(0F, 0F, 0F, 6, 10, 1, s);
        backer.setRotationPoint(-3F, 1F, 1.7F);
        backer.setTextureSize(64, 32);
        backer.mirror = true;
        this.setRotateAngle(backer, 0F, 0F, 0F);
        larm4 = new ModelRenderer(this, 36, 84);
        larm4.addBox(0F, 0F, 0F, 2, 5, 4, 0.25F);
        larm4.setRotationPoint(0.8F, 3.2F, -2F);
        larm4.setTextureSize(64, 32);
        larm4.mirror = true;
        this.setRotateAngle(larm4, 0F, 0F, 0F);
        larm3 = new ModelRenderer(this, 49, 84);
        larm3.addBox(0F, 0F, 0F, 1, 6, 4, s);
        larm3.setRotationPoint(1.7F, -1F, -2F);
        larm3.setTextureSize(64, 32);
        larm3.mirror = true;
        this.setRotateAngle(larm3, 0F, 0F, -0.1745329F);
        larm2 = new ModelRenderer(this, 60, 84);
        larm2.addBox(0F, 0F, 0F, 1, 5, 4, s);
        larm2.setRotationPoint(1.7F, -2F, -2F);
        larm2.setTextureSize(64, 32);
        larm2.mirror = true;
        this.setRotateAngle(larm2, 0F, 0F, -0.3490659F);
        rarm1 = new ModelRenderer(this, 15, 96);
        rarm1.addBox(0F, 0F, 0F, 5, 2, 5, s);
        rarm1.setRotationPoint(-3F, -4F, -2.5F);
        rarm1.setTextureSize(64, 32);
        rarm1.mirror = true;
        this.setRotateAngle(rarm1, 0F, 0F, 0.1745329F);
        rarm2 = new ModelRenderer(this, 36, 96);
        rarm2.addBox(0F, 0F, 0F, 1, 5, 4, s);
        rarm2.setRotationPoint(-2.7F, -2F, -2F);
        rarm2.setTextureSize(64, 32);
        rarm2.mirror = true;
        this.setRotateAngle(rarm2, 0F, 0F, 0.3490659F);
        rarm3 = new ModelRenderer(this, 47, 96);
        rarm3.addBox(0F, 0F, 0F, 1, 6, 4, s);
        rarm3.setRotationPoint(-2.7F, -1F, -2F);
        rarm3.setTextureSize(64, 32);
        rarm3.mirror = true;
        this.setRotateAngle(rarm3, 0F, 0F, 0.1745329F);
        rarm4 = new ModelRenderer(this, 58, 96);
        rarm4.addBox(0F, 0F, 0F, 2, 5, 4, 0.25F);
        rarm4.setRotationPoint(-2.8F, 3.2F, -2F);
        rarm4.setTextureSize(64, 32);
        rarm4.mirror = true;
        this.setRotateAngle(rarm4, 0F, 0F, 0F);
        boot1 = new ModelRenderer(this, 0, 114);
        boot1.addBox(0F, 0F, 0F, 4, 4, 5, s);
        boot1.setRotationPoint(-2F, 8F, -2.5F);
        boot1.setTextureSize(128, 128);
        boot1.mirror = true;
        this.setRotateAngle(boot1, 0F, 0F, 0F);
        boot2 = new ModelRenderer(this, 0, 114);
        boot2.addBox(0F, 0F, 0F, 4, 4, 5, s);
        boot2.setRotationPoint(-2F, 8F, -2.5F);
        boot2.setTextureSize(128, 128);
        boot2.mirror = true;
        this.setRotateAngle(boot2, 0F, 0F, 0F);
        fb1 = new ModelRenderer(this, 19, 114);
        fb1.addBox(0F, 0F, 0F, 3, 3, 1, s);
        fb1.setRotationPoint(-1F, 9F, -3F);
        fb1.setTextureSize(128, 128);
        fb1.mirror = true;
        this.setRotateAngle(fb1, 0F, 0F, 0F);
        fb2 = new ModelRenderer(this, 19, 114);
        fb2.addBox(0F, 0F, 0F, 3, 3, 1, s);
        fb2.setRotationPoint(-2F, 9F, -3F);
        fb2.setTextureSize(128, 128);
        fb2.mirror = true;
        this.setRotateAngle(fb2, 0F, 0F, 0F);
		
        this.helmAnchor.addChild(this.top);
        this.helmAnchor.addChild(this.back);
        this.helmAnchor.addChild(this.front1);
        this.helmAnchor.addChild(this.front2);
        this.helmAnchor.addChild(this.right1);
        this.helmAnchor.addChild(this.right2);
        this.helmAnchor.addChild(this.right3);
        this.helmAnchor.addChild(this.left1);
        this.helmAnchor.addChild(this.left2);
        this.helmAnchor.addChild(this.left3);
        this.helmAnchor.addChild(this.medal);
        this.helmAnchor.addChild(this.front);
        
        this.bodyAnchor.addChild(this.body);
        this.body.addChild(this.fronter);
        this.body.addChild(this.backer);
        this.body.addChild(this.book);
        
        this.armLAnchor.addChild(this.larm1);
        this.armLAnchor.addChild(this.larm2);
        this.armLAnchor.addChild(this.larm3);
        this.armLAnchor.addChild(this.larm4);
        
        this.armRAnchor.addChild(this.rarm1);
        this.armRAnchor.addChild(this.rarm2);
        this.armRAnchor.addChild(this.rarm3);
        this.armRAnchor.addChild(this.rarm4);
        
        this.pantsAnchor.addChild(this.f1);
        this.pantsAnchor.addChild(this.f2);
        this.pantsAnchor.addChild(this.f3);
        this.pantsAnchor.addChild(this.d1);
        this.pantsAnchor.addChild(this.d2);
        this.pantsAnchor.addChild(this.d3);
        this.pantsAnchor.addChild(this.e1);
        this.pantsAnchor.addChild(this.e2);
        this.pantsAnchor.addChild(this.e3);
        this.pantsAnchor.addChild(this.a1);
        this.pantsAnchor.addChild(this.a2);
        this.pantsAnchor.addChild(this.a3);
        
        this.legR.addChild(this.b1);
        this.legR.addChild(this.b2);
        this.legR.addChild(this.b3);

        this.legL.addChild(this.c1);
        this.legL.addChild(this.c2);
        this.legL.addChild(this.c3);
        
        this.bootL.addChild(this.boot2);
        this.bootL.addChild(this.fb2);
        this.bootR.addChild(this.boot1);
        this.bootR.addChild(this.fb1);
	}
	
	@Override
	public void render(@Nonnull Entity entity, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch, float scale) {

		helmAnchor.showModel = slot == EntityEquipmentSlot.HEAD;
		bodyAnchor.showModel = slot == EntityEquipmentSlot.CHEST;
		armRAnchor.showModel = slot == EntityEquipmentSlot.CHEST;
		armLAnchor.showModel = slot == EntityEquipmentSlot.CHEST;
		legR.showModel = slot == EntityEquipmentSlot.LEGS;
		legL.showModel = slot == EntityEquipmentSlot.LEGS;
		bootL.showModel = slot == EntityEquipmentSlot.FEET;
		bootR.showModel = slot == EntityEquipmentSlot.FEET;
		bipedHeadwear.showModel = false;

		bipedHead = helmAnchor;
		bipedBody = bodyAnchor;
		bipedRightArm = armRAnchor;
		bipedLeftArm = armLAnchor;
		if(slot == EntityEquipmentSlot.LEGS) {
			bipedBody = pantsAnchor;
			bipedRightLeg = legR;
			bipedLeftLeg = legL;
		} else {
			bipedRightLeg = bootR;
			bipedLeftLeg = bootL;
		}
		
		super.render(entity, limbSwing, limbSwingAmount, ageInTicks, netHeadYaw, headPitch, scale);
	}
	
}
